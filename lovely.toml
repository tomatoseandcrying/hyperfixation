[manifest]
version = "1.0.0"
priority = 0


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "self.seal = cardTable.seal"
position = "after"
match_indent = true
payload = '''
self.isIjiraq  = cardTable.isIjiraq
self.visiblyIjiraq = cardTable.visiblyIjiraq
'''
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "seal = self.seal,"
position = "after"
match_indent = true
payload = '''
isIjiraq = self.isIjiraq,
visiblyIjiraq = self.visiblyIjiraq,
'''
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "self.children.center.atlas = G.ASSET_ATLAS[(_center.atlas or (_center.set == 'Joker' or _center.consumeable or _center.set == 'Voucher') and _center.set) or 'centers']"
position = "at"
payload = '''
    if self.isIjiraq then
        self.children.center.atlas = G.ASSET_ATLAS['IjiraqJokers']
    else
        self.children.center.atlas = G.ASSET_ATLAS[(_center.atlas or (_center.set == 'Joker' or _center.consumeable or _center.set == 'Voucher') and _center.set) or 'centers']
    end
'''
match_indent = true
times = 1


# Mary unlock check
[[patches]]
[patches.pattern]
match_indent = true
times = 1
target = "functions/state_events.lua"
pattern = "check_for_unlock({type = 'chip_score', chips = math.floor(hand_chips*mult)})"
position = "after"
payload = '''
    check_for_unlock({type = 'hpfx_7mult', mult = math.floor(mult)})
'''

# Chud Bloodstone
[[patches]]
[patches.pattern]
match_indent = true
times = 1
target = "card.lua"
pattern = "pseudorandom('bloodstone') < G.GAME.probabilities.normal/self.ability.extra.odds then"
position = "after"
payload = '''
    SMODS.calculate_context{chudhit = true}
'''

# Chud Hallucination
[[patches]]
[patches.pattern]
match_indent = true 
times = 1
target = "card.lua"
pattern = '''
if context.open_booster then
    if self.ability.name == 'Hallucination' and #G.consumeables.cards + G.GAME.consumeable_buffer < G.consumeables.config.card_limit then
        if pseudorandom('halu'..G.GAME.round_resets.ante) < G.GAME.probabilities.normal/self.ability.extra then
            G.GAME.consumeable_buffer = G.GAME.consumeable_buffer + 1
            G.E_MANAGER:add_event(Event({
                trigger = 'before',
                delay = 0.0,
                func = (function()
                        local card = create_card('Tarot',G.consumeables, nil, nil, nil, nil, nil, 'hal')
'''
position = "after"
payload = '''
    SMODS.calculate_context{chudhit = true}
'''